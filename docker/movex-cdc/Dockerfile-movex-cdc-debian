# ----- curently not used, use Dockerfile-movex-cdc-alpine
# Build Docker image for MOVEX application based on jRuby
# Sandro PreuÃŸ, Peter Ramm, 2020-04-01

# Usage:
# Build image:      > docker pull jruby:9.2.13.0
#                   > docker build -f docker/movex-cdc/Dockerfile-movex-cdc-alpine --no-cache --build-arg BUILD_VERSION=`date "+%Y-%m-%d_%H-%M-%S"` -t movex-cdc .
# Run container:    > docker run -p 8080:8080 -e DB_PASSWORD=movex -e DB_USER=movex -e LOG_LEVEL=debug movex-cdc

# STAGE 1: build movex-cdc frontend
FROM node:14-alpine AS frontend_build

ENV FRONTEND_SRC_PATH=frontend

RUN apk update && apk upgrade && \
    npm install -g @vue/cli

WORKDIR /app

COPY $FRONTEND_SRC_PATH/package*.json ./

RUN npm install

COPY $FRONTEND_SRC_PATH .

# Build VueJS frontend function
RUN npm run build

# Ensure no known vulnerabilities are in dependencies of frontend packages
RUN npm audit --production

# STAGE 2: build movex-cdc backend
FROM jruby:9.2.13.0

MAINTAINER Peter.Ramm@og1o.de

ENV BACKEND_SRC_PATH=.
# Default for RAILS_MAX_THREADS to work for every CMD in docker container
ENV RAILS_MAX_THREADS=300

RUN  apt-get update && \
     apt-get -y upgrade && \
     apt-get install -y procps git vim && \
     sh -c "echo 'Europe/Berlin' > /etc/timezone" && \
     sh -c "rm /etc/localtime && ln -s /usr/share/zoneinfo/Europe/Berlin /etc/localtime" && \
     dpkg-reconfigure -f noninteractive tzdata && \
     gem install --no-document bundler

WORKDIR /app

COPY ${BACKEND_SRC_PATH}/Gemfile* ./

RUN bundle config set deployment 'true' && \
    bundle install --jobs 4

COPY ${BACKEND_SRC_PATH} .

# Copy Frontend-Build into Rails-Project for static serve
COPY --from=frontend_build /app/dist public/

# use ARG not before this point, because ARGs are implicitly used by RUN commands and
# this will force docker cache misses which results in not using cached layers
ARG BUILD_VERSION
RUN (test -n "$BUILD_VERSION"  && echo $BUILD_VERSION || date "+%Y-%m-%d_%H-%M-%S") > /app/build_version

EXPOSE 8080/tcp

# use bracket syntax to ensure run-kafka-jruby.sh runs with PID 1 and receives SIGTERM signal
CMD ["/app/docker/movex-cdc/run-movex-cdc.sh"]

HEALTHCHECK --interval=5m --timeout=3s CMD curl -I localhost:8080/health_check/ 2>/dev/null | grep "HTTP/1.1 200 OK" >/dev/null || exit 1
